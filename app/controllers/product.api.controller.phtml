<?php
require_once 'app/controllers/api.controller.php';
require_once 'app/helpers/auth.api.helper.php';
require_once 'app/models/product.api.model.php';

class ProductApiController extends ApiController
{
    private $model;

    function __construct()
    {
        parent::__construct();
        $this->model = new ProductModel();
    }

    function get($params = []){
    
        if (empty($params)) {
            $products = $this->model->getProducts();
            $this->view->response($products, 200);
        } else {
            $product = $this->model->getProduct($params[':ID']);
            if (!empty($products)) {
                if ($params[':subrecurso']) {
                    switch ($params[':subrecurso']) {
                        case 'nombre':
                            $this->view->response($product->name, 200);
                            break;
                        case 'descripcion':
                            $this->view->response($product->description, 200);
                            break;
                        case 'precio':
                            $this->view->response($product->price,200);
                            break;
                        default:
                            $this->view->response(
                                'El producto no contiene ' . $params[':subrecurso'] . '.',404);
                            break;
                    }
                }
                else{
                    $this->view->response($products, 200);
                }
            }
            else{
                $this->view->response('El producto con el id='.$params[':ID'].' no existe.', 404);
            }
        }
    }
    function create($params = []) {
        $body = $this->getData();
        $name = $body->name;
        $description = $body->description;
        $price = $body->price;

        if (empty($name) || empty($price)) {
            $this->view->response("Complete los datos", 400);
        } else {
            $id = $this->model->insertProduct($name, $description, $price);

            // devuelvo el recurso
            $product = $this->model->getProduct($id);
            $this->view->response($product, 201);
        }
    }
    function update($params = []) {
        $id = $params[':ID'];
        $product = $this->model->getProduct($id);

        if($product) {
            $body = $this->getData();
            $name = $body->name;
            $description = $body->description;
            $price = $body->price;
            $this->model->updateProduct($id, $name, $description, $price);

            $this->view->response('La tarea con id='.$id.' ha sido modificada.', 200);
        } else {
            $this->view->response('La tarea con id='.$id.' no existe.', 404);
        }
    }
}
?>



