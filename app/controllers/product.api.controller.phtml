<?php
require_once 'app/controllers/api.controller.php';
require_once 'app/helpers/auth.api.helper.php';
require_once 'app/models/product.model.php';

class ProductApiController extends ApiController
{
    private $model;
    private $authHelper;
}
function __construct()
{
    parent::__construct();
    $this->model = new ProductModel();
    $this->authHelper = new AuthHelper();
}

function get($params = [])
{
    $user = $this->authHelper->currentUser();
    if (!$user) { // si no existe el usuario
        $this->view->response('Unauthorized', 401);
        return;
    }

    if ($user->role != 'ADMIN') {
        $this->view->response('Forbidden', 403);
        return;
    }

    if (empty($params)) {
        $products = $this->model->getProducts();
        $this->view->response($products, 200);
    } else {
        $products = $this->model->getProduct($params[':ID']);
        if (!empty($products)) {
            if ($params[':subrecurso']) {
                switch ($params[':subrecurso']) {
                    case 'nombre':
                        $this->view->response($products->name, 200);
                        break;
                    case 'descripcion':
                        $this->view->response($products->descripcion, 200);
                        break;
                    default:
                        $this->view->response(
                            'El producto no contiene ' . $params[':subrecurso'] . '.',404);
                        break;
                    }
                }
                else{
                    $this->view->response($product, 200);
                }
                else{
                    $this->view->response('El producto con el id='.$params[':ID'].' no existe.', 404);
                }
            }
        }
    }
}

